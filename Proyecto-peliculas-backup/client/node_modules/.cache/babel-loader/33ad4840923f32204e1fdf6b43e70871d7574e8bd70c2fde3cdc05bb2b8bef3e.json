{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navas\\\\Desktop\\\\ARCHIVOS APLICACION HBRIDA\\\\Proyecto-peliculas-backup\\\\client\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\n// src/components/SearchBar.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTheme } from '../context/ThemeContext';\nimport movieService from '../services/api';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    theme\n  } = useTheme();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [showGenreFilter, setShowGenreFilter] = useState(false);\n  useEffect(() => {\n    const loadGenres = async () => {\n      try {\n        const response = await movieService.getGenres();\n        setGenres(response.data);\n      } catch (error) {\n        console.error('Error cargando géneros:', error);\n      }\n    };\n    loadGenres();\n  }, []);\n  const handleGenreToggle = genreId => {\n    setSelectedGenres(prevGenres => {\n      if (prevGenres.includes(genreId)) {\n        return prevGenres.filter(id => id !== genreId);\n      } else {\n        return [...prevGenres, genreId];\n      }\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const params = new URLSearchParams();\n    if (searchTerm.trim()) {\n      params.append('query', searchTerm.trim());\n    }\n    if (selectedGenres.length > 0) {\n      params.append('genres', selectedGenres.join(','));\n    }\n    navigate(`/search?${params.toString()}`);\n  };\n\n  // Clases condicionales basadas en el tema\n  const inputClass = theme === 'dark' ? 'form-control bg-dark text-light' : 'form-control bg-light text-dark';\n  const genreButtonClass = theme === 'dark' ? 'btn btn-outline-light' : 'btn btn-outline-dark';\n  const dropdownClass = theme === 'dark' ? 'genre-dropdown dark' : 'genre-dropdown light';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"search-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          className: inputClass,\n          placeholder: \"Buscar pel\\xEDculas...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: genreButtonClass,\n          onClick: () => setShowGenreFilter(!showGenreFilter),\n          children: \"\\uD83C\\uDFF7\\uFE0F G\\xE9neros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-warning\",\n          children: \"\\uD83D\\uDD0D Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), showGenreFilter && genres.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: dropdownClass,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre-list\",\n          children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre-item\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: `genre-label ${theme}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedGenres.includes(genre.id),\n                onChange: () => handleGenreToggle(genre.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ms-2\",\n                children: genre.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this)\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), selectedGenres.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-genres\",\n        children: selectedGenres.map(genreId => {\n          const genre = genres.find(g => g.id === genreId);\n          return genre && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge bg-secondary me-1\",\n            children: [genre.name, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close btn-close-white ms-2\",\n              onClick: () => handleGenreToggle(genreId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 37\n            }, this)]\n          }, genreId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchBar, \"DkCPAHtmQ+ZE5s3aw8jYlxZesd0=\", false, function () {\n  return [useNavigate, useTheme];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useTheme","movieService","jsxDEV","_jsxDEV","SearchBar","_s","navigate","theme","searchTerm","setSearchTerm","genres","setGenres","selectedGenres","setSelectedGenres","showGenreFilter","setShowGenreFilter","loadGenres","response","getGenres","data","error","console","handleGenreToggle","genreId","prevGenres","includes","filter","id","handleSubmit","e","preventDefault","params","URLSearchParams","trim","append","length","join","toString","inputClass","genreButtonClass","dropdownClass","onSubmit","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","genre","checked","name","find","g","_c","$RefreshReg$"],"sources":["C:/Users/navas/Desktop/ARCHIVOS APLICACION HBRIDA/Proyecto-peliculas-backup/client/src/components/SearchBar.js"],"sourcesContent":["// src/components/SearchBar.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTheme } from '../context/ThemeContext';\r\nimport movieService from '../services/api';\r\nimport './SearchBar.css';\r\n\r\nfunction SearchBar() {\r\n    const navigate = useNavigate();\r\n    const { theme } = useTheme();\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [genres, setGenres] = useState([]);\r\n    const [selectedGenres, setSelectedGenres] = useState([]);\r\n    const [showGenreFilter, setShowGenreFilter] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const loadGenres = async () => {\r\n            try {\r\n                const response = await movieService.getGenres();\r\n                setGenres(response.data);\r\n            } catch (error) {\r\n                console.error('Error cargando géneros:', error);\r\n            }\r\n        };\r\n        loadGenres();\r\n    }, []);\r\n\r\n    const handleGenreToggle = (genreId) => {\r\n        setSelectedGenres(prevGenres => {\r\n            if (prevGenres.includes(genreId)) {\r\n                return prevGenres.filter(id => id !== genreId);\r\n            } else {\r\n                return [...prevGenres, genreId];\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const params = new URLSearchParams();\r\n\r\n        if (searchTerm.trim()) {\r\n            params.append('query', searchTerm.trim());\r\n        }\r\n\r\n        if (selectedGenres.length > 0) {\r\n            params.append('genres', selectedGenres.join(','));\r\n        }\r\n\r\n        navigate(`/search?${params.toString()}`);\r\n    };\r\n\r\n    // Clases condicionales basadas en el tema\r\n    const inputClass = theme === 'dark'\r\n        ? 'form-control bg-dark text-light'\r\n        : 'form-control bg-light text-dark';\r\n    const genreButtonClass = theme === 'dark'\r\n        ? 'btn btn-outline-light'\r\n        : 'btn btn-outline-dark';\r\n    const dropdownClass = theme === 'dark'\r\n        ? 'genre-dropdown dark'\r\n        : 'genre-dropdown light';\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"search-form\">\r\n            <div className=\"search-container\">\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type=\"search\"\r\n                        className={inputClass}\r\n                        placeholder=\"Buscar películas...\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        className={genreButtonClass}\r\n                        onClick={() => setShowGenreFilter(!showGenreFilter)}\r\n                    >\r\n                        🏷️ Géneros\r\n                    </button>\r\n                    <button type=\"submit\" className=\"btn btn-warning\">\r\n                        🔍 Buscar\r\n                    </button>\r\n                </div>\r\n\r\n                {showGenreFilter && genres.length > 0 && (\r\n                    <div className={dropdownClass}>\r\n                        <div className=\"genre-list\">\r\n                            {genres.map(genre => (\r\n                                <div key={genre.id} className=\"genre-item\">\r\n                                    <label className={`genre-label ${theme}`}>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={selectedGenres.includes(genre.id)}\r\n                                            onChange={() => handleGenreToggle(genre.id)}\r\n                                        />\r\n                                        <span className=\"ms-2\">{genre.name}</span>\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {selectedGenres.length > 0 && (\r\n                    <div className=\"selected-genres\">\r\n                        {selectedGenres.map(genreId => {\r\n                            const genre = genres.find(g => g.id === genreId);\r\n                            return genre && (\r\n                                <span key={genreId} className=\"badge bg-secondary me-1\">\r\n                                    {genre.name}\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn-close btn-close-white ms-2\"\r\n                                        onClick={() => handleGenreToggle(genreId)}\r\n                                    />\r\n                                </span>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}