{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyecto-peliculas\\\\client\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport movieService from '../services/api';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar() {\n  _s();\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [showGenreFilter, setShowGenreFilter] = useState(false);\n  useEffect(() => {\n    const loadGenres = async () => {\n      try {\n        const response = await movieService.getGenres();\n        setGenres(response.data);\n      } catch (error) {\n        console.error('Error cargando géneros:', error);\n      }\n    };\n    loadGenres();\n  }, []);\n  const handleGenreToggle = genreId => {\n    setSelectedGenres(prevGenres => {\n      if (prevGenres.includes(genreId)) {\n        return prevGenres.filter(id => id !== genreId);\n      } else {\n        return [...prevGenres, genreId];\n      }\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchTerm.trim() || selectedGenres.length > 0) {\n      const queryParams = new URLSearchParams();\n      if (searchTerm.trim()) {\n        queryParams.append('query', searchTerm.trim());\n      }\n      if (selectedGenres.length > 0) {\n        queryParams.append('genres', selectedGenres.join(','));\n      }\n      navigate(`/search?${queryParams.toString()}`);\n      setSearchTerm('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"search-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          className: \"form-control\",\n          placeholder: \"Buscar pel\\xEDculas...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-light\",\n          onClick: () => setShowGenreFilter(!showGenreFilter),\n          children: \"\\uD83C\\uDFF7\\uFE0F G\\xE9neros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-warning\",\n          children: \"\\uD83D\\uDD0D Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), showGenreFilter && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genre-dropdown\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre-list\",\n          children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre-item\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"genre-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedGenres.includes(genre.id),\n                onChange: () => handleGenreToggle(genre.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ms-2\",\n                children: genre.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this)\n          }, genre.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), selectedGenres.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-genres\",\n        children: selectedGenres.map(genreId => {\n          const genre = genres.find(g => g.id === genreId);\n          return genre && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge bg-secondary me-1\",\n            children: [genre.name, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close btn-close-white ms-2\",\n              onClick: () => handleGenreToggle(genreId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this)]\n          }, genreId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchBar, \"JbQ0sKZjmaH2l57LO6+0bKjSL04=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","movieService","jsxDEV","_jsxDEV","SearchBar","_s","navigate","searchTerm","setSearchTerm","genres","setGenres","selectedGenres","setSelectedGenres","showGenreFilter","setShowGenreFilter","loadGenres","response","getGenres","data","error","console","handleGenreToggle","genreId","prevGenres","includes","filter","id","handleSubmit","e","preventDefault","trim","length","queryParams","URLSearchParams","append","join","toString","onSubmit","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","genre","checked","name","find","g","_c","$RefreshReg$"],"sources":["C:/Proyecto-peliculas/client/src/components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport movieService from '../services/api';\r\nimport './SearchBar.css';\r\n\r\nfunction SearchBar() {\r\n    const navigate = useNavigate();\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [genres, setGenres] = useState([]);\r\n    const [selectedGenres, setSelectedGenres] = useState([]);\r\n    const [showGenreFilter, setShowGenreFilter] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const loadGenres = async () => {\r\n            try {\r\n                const response = await movieService.getGenres();\r\n                setGenres(response.data);\r\n            } catch (error) {\r\n                console.error('Error cargando géneros:', error);\r\n            }\r\n        };\r\n        loadGenres();\r\n    }, []);\r\n\r\n    const handleGenreToggle = (genreId) => {\r\n        setSelectedGenres(prevGenres => {\r\n            if (prevGenres.includes(genreId)) {\r\n                return prevGenres.filter(id => id !== genreId);\r\n            } else {\r\n                return [...prevGenres, genreId];\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (searchTerm.trim() || selectedGenres.length > 0) {\r\n            const queryParams = new URLSearchParams();\r\n            if (searchTerm.trim()) {\r\n                queryParams.append('query', searchTerm.trim());\r\n            }\r\n            if (selectedGenres.length > 0) {\r\n                queryParams.append('genres', selectedGenres.join(','));\r\n            }\r\n            navigate(`/search?${queryParams.toString()}`);\r\n            setSearchTerm('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"search-form\">\r\n            <div className=\"search-container\">\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Buscar películas...\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-light\"\r\n                        onClick={() => setShowGenreFilter(!showGenreFilter)}\r\n                    >\r\n                        🏷️ Géneros\r\n                    </button>\r\n                    <button type=\"submit\" className=\"btn btn-warning\">\r\n                        🔍 Buscar\r\n                    </button>\r\n                </div>\r\n\r\n                {showGenreFilter && (\r\n                    <div className=\"genre-dropdown\">\r\n                        <div className=\"genre-list\">\r\n                            {genres.map(genre => (\r\n                                <div key={genre.id} className=\"genre-item\">\r\n                                    <label className=\"genre-label\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={selectedGenres.includes(genre.id)}\r\n                                            onChange={() => handleGenreToggle(genre.id)}\r\n                                        />\r\n                                        <span className=\"ms-2\">{genre.name}</span>\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {selectedGenres.length > 0 && (\r\n                    <div className=\"selected-genres\">\r\n                        {selectedGenres.map(genreId => {\r\n                            const genre = genres.find(g => g.id === genreId);\r\n                            return genre && (\r\n                                <span key={genreId} className=\"badge bg-secondary me-1\">\r\n                                    {genre.name}\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn-close btn-close-white ms-2\"\r\n                                        onClick={() => handleGenreToggle(genreId)}\r\n                                    />\r\n                                </span>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACZ,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMf,YAAY,CAACgB,SAAS,CAAC,CAAC;QAC/CP,SAAS,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IACDJ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,iBAAiB,GAAIC,OAAO,IAAK;IACnCV,iBAAiB,CAACW,UAAU,IAAI;MAC5B,IAAIA,UAAU,CAACC,QAAQ,CAACF,OAAO,CAAC,EAAE;QAC9B,OAAOC,UAAU,CAACE,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAKJ,OAAO,CAAC;MAClD,CAAC,MAAM;QACH,OAAO,CAAC,GAAGC,UAAU,EAAED,OAAO,CAAC;MACnC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMK,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAItB,UAAU,CAACuB,IAAI,CAAC,CAAC,IAAInB,cAAc,CAACoB,MAAM,GAAG,CAAC,EAAE;MAChD,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAAC,CAAC;MACzC,IAAI1B,UAAU,CAACuB,IAAI,CAAC,CAAC,EAAE;QACnBE,WAAW,CAACE,MAAM,CAAC,OAAO,EAAE3B,UAAU,CAACuB,IAAI,CAAC,CAAC,CAAC;MAClD;MACA,IAAInB,cAAc,CAACoB,MAAM,GAAG,CAAC,EAAE;QAC3BC,WAAW,CAACE,MAAM,CAAC,QAAQ,EAAEvB,cAAc,CAACwB,IAAI,CAAC,GAAG,CAAC,CAAC;MAC1D;MACA7B,QAAQ,CAAC,WAAW0B,WAAW,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC;MAC7C5B,aAAa,CAAC,EAAE,CAAC;IACrB;EACJ,CAAC;EAED,oBACIL,OAAA;IAAMkC,QAAQ,EAAEV,YAAa;IAACW,SAAS,EAAC,aAAa;IAAAC,QAAA,eACjDpC,OAAA;MAAKmC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7BpC,OAAA;QAAKmC,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBpC,OAAA;UACIqC,IAAI,EAAC,QAAQ;UACbF,SAAS,EAAC,cAAc;UACxBG,WAAW,EAAC,wBAAqB;UACjCC,KAAK,EAAEnC,UAAW;UAClBoC,QAAQ,EAAGf,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACgB,MAAM,CAACF,KAAK;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,eACF7C,OAAA;UACIqC,IAAI,EAAC,QAAQ;UACbF,SAAS,EAAC,uBAAuB;UACjCW,OAAO,EAAEA,CAAA,KAAMnC,kBAAkB,CAAC,CAACD,eAAe,CAAE;UAAA0B,QAAA,EACvD;QAED;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT7C,OAAA;UAAQqC,IAAI,EAAC,QAAQ;UAACF,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAElD;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,EAELnC,eAAe,iBACZV,OAAA;QAAKmC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC3BpC,OAAA;UAAKmC,SAAS,EAAC,YAAY;UAAAC,QAAA,EACtB9B,MAAM,CAACyC,GAAG,CAACC,KAAK,iBACbhD,OAAA;YAAoBmC,SAAS,EAAC,YAAY;YAAAC,QAAA,eACtCpC,OAAA;cAAOmC,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BpC,OAAA;gBACIqC,IAAI,EAAC,UAAU;gBACfY,OAAO,EAAEzC,cAAc,CAACa,QAAQ,CAAC2B,KAAK,CAACzB,EAAE,CAAE;gBAC3CiB,QAAQ,EAAEA,CAAA,KAAMtB,iBAAiB,CAAC8B,KAAK,CAACzB,EAAE;cAAE;gBAAAmB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/C,CAAC,eACF7C,OAAA;gBAAMmC,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAEY,KAAK,CAACE;cAAI;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC;UAAC,GARFG,KAAK,CAACzB,EAAE;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASb,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACR,EAEArC,cAAc,CAACoB,MAAM,GAAG,CAAC,iBACtB5B,OAAA;QAAKmC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3B5B,cAAc,CAACuC,GAAG,CAAC5B,OAAO,IAAI;UAC3B,MAAM6B,KAAK,GAAG1C,MAAM,CAAC6C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC7B,EAAE,KAAKJ,OAAO,CAAC;UAChD,OAAO6B,KAAK,iBACRhD,OAAA;YAAoBmC,SAAS,EAAC,yBAAyB;YAAAC,QAAA,GAClDY,KAAK,CAACE,IAAI,eACXlD,OAAA;cACIqC,IAAI,EAAC,QAAQ;cACbF,SAAS,EAAC,gCAAgC;cAC1CW,OAAO,EAAEA,CAAA,KAAM5B,iBAAiB,CAACC,OAAO;YAAE;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC;UAAA,GANK1B,OAAO;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOZ,CACT;QACL,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;AAAC3C,EAAA,CA1GQD,SAAS;EAAA,QACGJ,WAAW;AAAA;AAAAwD,EAAA,GADvBpD,SAAS;AA4GlB,eAAeA,SAAS;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}